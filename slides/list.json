[
    {
        "background": "assets/img/framework-days-2016-title-slide.png",
        "path":       null
    },
    "introduction/hello.html",
    "introduction/i-am-marco.html",
    "introduction/ocramius.html",
    {
        "background": null,
        "path":       "introduction/i-am-ocramius.html"
    },
    "introduction/i-work-for-roave.html",
    "introduction/i-work-on-zend-framework-2.html",
    "introduction/i-work-on-doctrine.html",

    "doctrine-2-orm-best-practices/the-project/doctrine-project.html",
    "doctrine-2-orm-best-practices/the-project/looking-for-contributors.html",

    "doctrine-2-orm-best-practices/what-is-doctrine-orm/doctrine-orm.html",

    "doctrine-2-orm-best-practices/the-talk.html",

    "doctrine-2-orm-best-practices/know-your-tool/know-your-enemy.html",
    "doctrine-2-orm-best-practices/know-your-tool/know-your-tools.html",
    "doctrine-2-orm-best-practices/know-your-tool/read-the-docs.html",
    "doctrine-2-orm-best-practices/know-your-tool/knowledge-is-power.html",
    {
        "background": "assets/img/power-is-power.gif",
        "path":       "doctrine-2-orm-best-practices/know-your-tool/power-is-power.html"
    },

    "doctrine-2-orm-best-practices/what-is-doctrine-orm/use-when-appropriate.html",

    "doctrine-2-orm-best-practices/what-is-doctrine-orm/who-for/who.html",
    "doctrine-2-orm-best-practices/what-is-doctrine-orm/who-for/oltp.html",
    "doctrine-2-orm-best-practices/what-is-doctrine-orm/who-for/ddd.html",
    "doctrine-2-orm-best-practices/what-is-doctrine-orm/who-for/fast-prototyping.html",
    "doctrine-2-orm-best-practices/what-is-doctrine-orm/who-for/oo-first.html",

    "doctrine-2-orm-best-practices/what-is-doctrine-orm/who-not-for/who-not.html",
    "doctrine-2-orm-best-practices/what-is-doctrine-orm/who-not-for/dynamic-schema.html",
    "doctrine-2-orm-best-practices/what-is-doctrine-orm/who-not-for/reporting-applications.html",

    "doctrine-2-orm-best-practices/entity-practices/where-to-start.html",
    "doctrine-2-orm-best-practices/entity-practices/entities.html",

    "doctrine-2-orm-best-practices/entity-practices/entities-first/entities-are-what-you-want.html",
    "doctrine-2-orm-best-practices/entity-practices/entities-first/the-database-is-just-saving-things.html",
    "doctrine-2-orm-best-practices/entity-practices/entities-first/design-entities-first.html",
    "doctrine-2-orm-best-practices/entity-practices/entities-first/define-the-db-after-you-know-how-to-use-it.html",
    "doctrine-2-orm-best-practices/entity-practices/entities-first/define-mappings-after-the-entities.html",

    "doctrine-2-orm-best-practices/entity-practices/entity-api/designing-entities.html",
    "doctrine-2-orm-best-practices/entity-practices/entity-api/typed-array-example.html",
    "doctrine-2-orm-best-practices/entity-practices/entity-api/entities-are-not-typed-arrays.html",
    "doctrine-2-orm-best-practices/entity-practices/entity-api/entities-have-behavior.html",
    "doctrine-2-orm-best-practices/entity-practices/entity-api/entity-state-is-irrelevant.html",
    "doctrine-2-orm-best-practices/entity-practices/entity-api/behavior-example.html",
    "doctrine-2-orm-best-practices/entity-practices/entity-api/no-behavior-no-orm.html",

    "doctrine-2-orm-best-practices/entity-practices/entity-rules/respect-demeter.html",
    "doctrine-2-orm-best-practices/entity-practices/entity-rules/law-of-demeter-violation.html",
    "doctrine-2-orm-best-practices/entity-practices/entity-rules/law-of-demeter-fixed.html",
    "doctrine-2-orm-best-practices/entity-practices/entity-rules/law-of-demeter-advantages.html",

    "doctrine-2-orm-best-practices/entity-practices/disallow-collection-access/disallow-external-collection-access.html",
    "doctrine-2-orm-best-practices/entity-practices/disallow-collection-access/access-example.html",
    "doctrine-2-orm-best-practices/entity-practices/disallow-collection-access/keep-collections-hidden-in-your-entities.html",
    "doctrine-2-orm-best-practices/entity-practices/disallow-collection-access/disallowed-access-example.html",

    "doctrine-2-orm-best-practices/entity-practices/entity-validity/entity-validity.html",
    {
        "background": "assets/img/orly.jpg",
        "path":       null
    },
    {
        "background": "assets/img/there-is-no-dana-there-is-only-zuul.png",
        "path":       null
    },
    "doctrine-2-orm-best-practices/entity-practices/entity-validity/entities-are-always-valid.html",
    "doctrine-2-orm-best-practices/entity-practices/entity-validity/if-you-have-invalid-state-design-separate-dtos.html",
    "doctrine-2-orm-best-practices/entity-practices/entity-validity/validity-after-construct.html",
    "doctrine-2-orm-best-practices/entity-practices/entity-validity/no-setters.html",

    "doctrine-2-orm-best-practices/entity-practices/no-app-layer-coupling/avoid-coupling-with-the-app-layer.html",
    "doctrine-2-orm-best-practices/entity-practices/no-app-layer-coupling/app-layer-coupling-example.html",
    "doctrine-2-orm-best-practices/entity-practices/no-app-layer-coupling/form-components-break-validity.html",
    "doctrine-2-orm-best-practices/entity-practices/no-app-layer-coupling/both-symfony-and-zf-are-terrible-at-this.html",

    "doctrine-2-orm-best-practices/entity-practices/no-lifecycle-callbacks/avoid-lifecycle-callbacks.html",
    "doctrine-2-orm-best-practices/entity-practices/no-lifecycle-callbacks/life-cycle-callbacks-are-a-hack.html",
    "doctrine-2-orm-best-practices/entity-practices/no-lifecycle-callbacks/life-cycle-callbacks-are-serialize-unserialize.html",
    "doctrine-2-orm-best-practices/entity-practices/no-lifecycle-callbacks/dont-use-lifecycle-callbacks-for-business-logic.html",

    "doctrine-2-orm-best-practices/entity-practices/uuids/avoid-db-generated-identifiers.html",
    "doctrine-2-orm-best-practices/entity-practices/uuids/use-uuids-instead.html",
    "doctrine-2-orm-best-practices/entity-practices/uuids/how-do-we-use-uuids.html",
    "doctrine-2-orm-best-practices/entity-practices/uuids/auto-increment-confused-with-timestamp-sorting.html",

    "doctrine-2-orm-best-practices/entity-practices/avoid-derived-pk/avoid-derived-primary-keys.html",

    "doctrine-2-orm-best-practices/entity-practices/avoid-composite-pk/avoid-composite-primary-keys.html",

    "doctrine-2-orm-best-practices/entity-practices/immutable-data/favour-immutable-data.html",
    "doctrine-2-orm-best-practices/entity-practices/immutable-data/immutable-data-example.html",
    "doctrine-2-orm-best-practices/entity-practices/immutable-data/immutable-data-example-2.html",
    "doctrine-2-orm-best-practices/entity-practices/immutable-data/why-immutable-data.html",
    "doctrine-2-orm-best-practices/entity-practices/immutable-data/more-on-immutable.html",

    "doctrine-2-orm-best-practices/entity-practices/avoid-soft-deletes/avoid-soft-deletes.html",
    "doctrine-2-orm-best-practices/entity-practices/avoid-soft-deletes/soft-deletes-are-a-broken-concept.html",
    "doctrine-2-orm-best-practices/entity-practices/avoid-soft-deletes/soft-deletes-are-from-another-era.html",
    "doctrine-2-orm-best-practices/entity-practices/avoid-soft-deletes/soft-deletes-are-against-immutability.html",
    "doctrine-2-orm-best-practices/entity-practices/avoid-soft-deletes/soft-deletes-break-data-integrity.html",
    "doctrine-2-orm-best-practices/entity-practices/avoid-soft-deletes/soft-deletes-can-be-replaced.html",

    "doctrine-2-orm-best-practices/mapping-rules/mapping-driver/mapping-driver-choice.html",
    "doctrine-2-orm-best-practices/mapping-rules/mapping-driver/use-annotations-in-private-packages.html",
    "doctrine-2-orm-best-practices/mapping-rules/mapping-driver/use-xml-mappings-in-public-packages.html",

    "doctrine-2-orm-best-practices/mapping-rules/eager-loading/lazy-or-eager.html",
    "doctrine-2-orm-best-practices/mapping-rules/eager-loading/eager-loading-is-useless.html",
    "doctrine-2-orm-best-practices/mapping-rules/eager-loading/extra-lazy-usually-indicates-excessive-mapping.html",

    "doctrine-2-orm-best-practices/mapping-rules/avoid-bidirectional/avoid-bidirectional-mapping.html",
    "doctrine-2-orm-best-practices/mapping-rules/avoid-bidirectional/bi-directional-associations-are-overhead.html",

    "doctrine-2-orm-best-practices/repository-practices/custom-repositories/custom-repositories.html",
    "doctrine-2-orm-best-practices/repository-practices/custom-repositories/custom-repository-example.html",

    "doctrine-2-orm-best-practices/repository-practices/query-functions/query-functions.html",
    "doctrine-2-orm-best-practices/repository-practices/query-functions/query-function-example.html",

    "doctrine-2-orm-best-practices/repository-practices/repositories-as-services/repositories-are-services.html",
    "doctrine-2-orm-best-practices/repository-practices/repositories-as-services/avoid-get-repository.html",
    "doctrine-2-orm-best-practices/repository-practices/repositories-as-services/inject-repositories-instead.html",

    "doctrine-2-orm-best-practices/repository-practices/separate-get-and-find/separate-get-and-find.html",
    "doctrine-2-orm-best-practices/repository-practices/separate-get-and-find/find-can-return-nothing.html",
    "doctrine-2-orm-best-practices/repository-practices/separate-get-and-find/get-cannot-return-null.html",
    "doctrine-2-orm-best-practices/repository-practices/separate-get-and-find/get-example.html",
    "doctrine-2-orm-best-practices/repository-practices/separate-get-and-find/get-simplifies-error-checking-logic.html",

    "doctrine-2-orm-best-practices/transactions/two-phase-commits/avoid-two-phase-commits.html",
    "doctrine-2-orm-best-practices/transactions/two-phase-commits/keep-transactions-unrelated.html",

    "doctrine-2-orm-best-practices/transactions/different-services-different-transactions/different-boundaries-different-transactions.html",
    "doctrine-2-orm-best-practices/transactions/different-services-different-transactions/communicate-between-boundaries-via-identifiers.html",

    "doctrine-2-orm-best-practices/normalization/avoid-over-normalization/keep-normalization-under-control.html",
    "doctrine-2-orm-best-practices/normalization/avoid-over-normalization/keep-normalization-freaks-under-control.html",
    "doctrine-2-orm-best-practices/normalization/avoid-over-normalization/you-may-need-to-gag-your-dba.html",

    "doctrine-2-orm-best-practices/how-is-the-orm-structured/performance.html",
    "doctrine-2-orm-best-practices/how-is-the-orm-structured/structure.html",
    "doctrine-2-orm-best-practices/how-is-the-orm-structured/hot-spots.html",
    "doctrine-2-orm-best-practices/how-is-the-orm-structured/profile-a-lot.html",

    "doctrine-2-orm-best-practices/recap/recap.html",
    "doctrine-2-orm-best-practices/recap/domain-first.html",
    "doctrine-2-orm-best-practices/recap/do-not-normalize-if-not-needed-by-the-domain.html",
    "doctrine-2-orm-best-practices/recap/consider-different-dbs-for-transactional-data.html",

    "outro/thanks.html"
]
